# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";


glx-no-stencil = true;

glx-copy-from-front = false;


# Enabled client-side shadows on windows.
#shadow = true;
shadow-radius = 0;
shadow-offset-x = -15;
shadow-offset-y = -15;
shadow-opacity = 0.75;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

shadow-exclude = [
    "! name~=''",
    "class_g = 'Firefox' && argb",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 0.85;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

# i3 trasparent borders and windows
opacity-rule = [
    # "70:class_g = 'kitty' && !focused",
];

corner-radius = 15;

rounded-corners-exclude = [
  # "class_g = 'firefox'",
  #"class_g = 'Polybar'",
];



blur-background = true;
blur-method K "kawase";
blur-strength = 10;
# 
# 
# # Blur background of opaque windows with transparent frames as well.
blur-background-frame = true;
# # Do not let blur radius adjust based on window opacity.
# 
blur-kern = "7x7gaussian";
blur-background-fixed = false;


transition-length = 300;
transition-pow-x = 1.5;
transition-pow-y = 1.5;
transition-pow-w = 1.5;
transition-pow-h = 1.5;
size-transition = true;
spawn-center-screen = false;
spawn-center = true;
no-scale-down = false;


# blur-background-exclude = [
#     "window_type = 'dock'",
#     "window_type = 'desktop'"
# ];

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];


#################################
#
# Focus
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

focus-exclude = [ 
    "class_g = 'Firefox'",
    "class_g = 'firefox'",
    "class_g = 'feh'",
    "class_g = 'vlc'",
    "class_g = 'zoom'",
    "class_g = 'Zathura'",
    "class_g = 'Bitwig Studio'"
];

#################################
#
# Other
#
#################################

# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
refresh-rate = 0;

# Vertical synchronization: match the refresh rate of the monitor
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
    dropdown_menu = { shadow = false; };
    popup_menu    = { shadow = false; };
    utility       = { shadow = false; };
};

xrender-sync-fence = true;
